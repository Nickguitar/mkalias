#!/bin/bash
# mkalias - Tool to improve aliases management
# Nicholas Ferreira  -  30/12/22
#    0 x 7 3 5 9

mkalias_file="$HOME/.mkalias"
touch $mkalias_file
mkalias_function="
mkalias(){
	bash `pwd`/$0 \$@; source ~/.bashrc
}"

# change as needed
rcfile="$HOME/.bashrc"

# verify whether mkalias is loaded on $rcfile
if [ ! "$(grep '.mkalias' $rcfile)" ]; then
	read -p "[!] 'source ~/.mkalias' not found in $rcfile. Want to add it? now [Y/n] " p
	[[ "$p" =~ n|N ]] && echo "[-] Exiting..." && exit
	echo "source $mkalias_file" >> $rcfile
fi

# verify whether mkalias function is loaded on $rcfile
if [ ! "$(grep 'mkalias()' $rcfile)" ]; then
	read -p "[!] 'function mkalias' not found in $rcfile. Want to add it? now [Y/n] " p
	[[ "$p" =~ n|N ]] && echo "[-] Exiting..." && exit
	echo "$mkalias_function" >> $rcfile
fi

function add_alias(){
	[ -z $2 ] && echo "Usage: mkalias add <alias name> <alias value>" && exit
	alias_name="$1"
	shift 1
	alias_value="$@"
	alias_exists "$alias_name"
	echo "alias $alias_name=\"$alias_value\"" >> $mkalias_file
	echo "Alias $alias_name=\"$alias_value\" added to $mkalias_file"
	source $rcfile
	exit
}

# use 'mkalias ls -s' to sort aliases
function list_alias(){
	yellow='\\e[31m'
	reset='\\e[0m'
	echo "[*] Aliases from $mkalias_file:" 1>&2
	aliases="$(sed -e 's/ \(.*\)=/ \\e[32m\1\\e[0m=/g' -e 's/alias \(.*\)="\(.*\)"$/alias \1=\\e[33m"\2"\\e[0m/g' $mkalias_file )"
	echo -e "$aliases" | grep . | grep -v "#alias" | $( [ "$1" = "-s" ] && echo 'sort' || echo 'cat' )
	exit
}

function rm_alias(){
	[ -z $1 ] && echo "Usage: mkalias rm <alias name>" && exit
	[ -z "`grep -E \"^alias ${1}=\" ${mkalias_file}`" ] && echo "[-] Alias '$1' doesn't exist in $mkalias_file" && exit
	echo "[+] Removing alias '$1' from $mkalias_file"
	sed -Eiz "s/^alias $1=\".*//g" $mkalias_file
	exit
}

function alias_exists(){
	[ "`grep -E \"^alias ${1}=\" ${mkalias_file}`" ] && echo "[-] Alias '$1' already exists in $mkalias_file" && exit
}

function help(){
	echo "Usage: $0 <add|ls|rm> [-s (sort list)] [alias name] [alias value]"
	exit	
}

function parse_arg(){
	[[ "$1" =~ add ]] && shift && add_alias $@
	[[ "$1" =~ ls|list ]] && list_alias $2
	[[ "$1" =~ rm|remove ]] && rm_alias $2
	help
}

parse_arg $@
